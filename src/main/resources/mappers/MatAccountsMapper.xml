<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtk.apistation.webapi.Mapper.MatAccountsMapper">
  <resultMap id="BaseResultMap" type="com.xtk.apistation.webapi.bean.MatAccounts">
    <result column="TID" jdbcType="DECIMAL" property="tid" />
    <result column="SERIAL_NUMBER" jdbcType="DECIMAL" property="serialNumber" />
    <result column="MATERIAL_NUMBER" jdbcType="VARCHAR" property="materialNumber" />
    <result column="BATCH_NUMBER" jdbcType="VARCHAR" property="batchNumber" />
    <result column="LOCATION" jdbcType="VARCHAR" property="location" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
    <result column="UNUMBER" jdbcType="DECIMAL" property="unumber" />
    <result column="UNIT_PRICE" jdbcType="DECIMAL" property="unitPrice" />
    <result column="TIME" jdbcType="VARCHAR" property="time" />
    <result column="FACTORY" jdbcType="VARCHAR" property="factory" />
    <result column="WORK_SHOP" jdbcType="VARCHAR" property="workShop" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
  </resultMap>
  <select id="getMAs"  resultType="MatAccounts" resultMap="BaseResultMap">
        select * from MAT_ACCOUNTS
        where SERIAL_NUMBER &gt; #{p1} and SERIAL_NUMBER &lt; = (#{p1} + #{p2})
        order by TID
    </select>
  <select id="getMABySNId" parameterType="int" resultType="MatAccounts" resultMap="BaseResultMap">
        select * from MAT_ACCOUNTS where SERIAL_NUMBER = #{sn}
    </select>
<!--  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TID, SERIAL_NUMBER, MATERIAL_NUMBER, BATCH_NUMBER, `LOCATION`, `STATE`, UNUMBER, 
    UNIT_PRICE, `TIME`, FACTORY, WORK_SHOP, REQUEST_ID
  </sql>
  <select id="selectByExample" parameterType="generator.MatAccountsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WEBAPI.MAT_ACCOUNTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="generator.MatAccountsExample">
    delete from WEBAPI.MAT_ACCOUNTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="generator.MatAccounts">
    insert into WEBAPI.MAT_ACCOUNTS (TID, SERIAL_NUMBER, MATERIAL_NUMBER, 
      BATCH_NUMBER, `LOCATION`, `STATE`, 
      UNUMBER, UNIT_PRICE, `TIME`, 
      FACTORY, WORK_SHOP, REQUEST_ID
      )
    values (#{tid,jdbcType=DECIMAL}, #{serialNumber,jdbcType=DECIMAL}, #{materialNumber,jdbcType=VARCHAR}, 
      #{batchNumber,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{unumber,jdbcType=DECIMAL}, #{unitPrice,jdbcType=DECIMAL}, #{time,jdbcType=VARCHAR}, 
      #{factory,jdbcType=VARCHAR}, #{workShop,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="generator.MatAccounts">
    insert into WEBAPI.MAT_ACCOUNTS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        TID,
      </if>
      <if test="serialNumber != null">
        SERIAL_NUMBER,
      </if>
      <if test="materialNumber != null">
        MATERIAL_NUMBER,
      </if>
      <if test="batchNumber != null">
        BATCH_NUMBER,
      </if>
      <if test="location != null">
        `LOCATION`,
      </if>
      <if test="state != null">
        `STATE`,
      </if>
      <if test="unumber != null">
        UNUMBER,
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE,
      </if>
      <if test="time != null">
        `TIME`,
      </if>
      <if test="factory != null">
        FACTORY,
      </if>
      <if test="workShop != null">
        WORK_SHOP,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="materialNumber != null">
        #{materialNumber,jdbcType=VARCHAR},
      </if>
      <if test="batchNumber != null">
        #{batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="unumber != null">
        #{unumber,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        #{factory,jdbcType=VARCHAR},
      </if>
      <if test="workShop != null">
        #{workShop,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.MatAccountsExample" resultType="java.lang.Long">
    select count(*) from WEBAPI.MAT_ACCOUNTS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update WEBAPI.MAT_ACCOUNTS
    <set>
      <if test="record.tid != null">
        TID = #{record.tid,jdbcType=DECIMAL},
      </if>
      <if test="record.serialNumber != null">
        SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.materialNumber != null">
        MATERIAL_NUMBER = #{record.materialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.batchNumber != null">
        BATCH_NUMBER = #{record.batchNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        `LOCATION` = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        `STATE` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.unumber != null">
        UNUMBER = #{record.unumber,jdbcType=DECIMAL},
      </if>
      <if test="record.unitPrice != null">
        UNIT_PRICE = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.time != null">
        `TIME` = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.factory != null">
        FACTORY = #{record.factory,jdbcType=VARCHAR},
      </if>
      <if test="record.workShop != null">
        WORK_SHOP = #{record.workShop,jdbcType=VARCHAR},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update WEBAPI.MAT_ACCOUNTS
    set TID = #{record.tid,jdbcType=DECIMAL},
      SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      MATERIAL_NUMBER = #{record.materialNumber,jdbcType=VARCHAR},
      BATCH_NUMBER = #{record.batchNumber,jdbcType=VARCHAR},
      `LOCATION` = #{record.location,jdbcType=VARCHAR},
      `STATE` = #{record.state,jdbcType=VARCHAR},
      UNUMBER = #{record.unumber,jdbcType=DECIMAL},
      UNIT_PRICE = #{record.unitPrice,jdbcType=DECIMAL},
      `TIME` = #{record.time,jdbcType=VARCHAR},
      FACTORY = #{record.factory,jdbcType=VARCHAR},
      WORK_SHOP = #{record.workShop,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>-->
</mapper>
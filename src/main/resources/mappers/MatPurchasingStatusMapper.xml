<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xtk.apistation.webapi.mapper.MatPurchasingStatusMapper">
  <resultMap id="BaseResultMap" type="com.xtk.apistation.webapi.bean.MatPurchasingStatus">
    <result column="TID" jdbcType="DECIMAL" property="tid" />
    <result column="SERIAL_NUMBER" jdbcType="DECIMAL" property="serialNumber" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="REQUEST_NUM" jdbcType="VARCHAR" property="requestNum" />
    <result column="NODE_STATS" jdbcType="VARCHAR" property="nodeStats" />
    <result column="NODE_TIME" jdbcType="VARCHAR" property="nodeTime" />
    <result column="FEEDBACK_INFO" jdbcType="VARCHAR" property="feedbackInfo" />
  </resultMap>
  <select id="getMPSs"  resultType="MatPurchasingStatus" resultMap="BaseResultMap">
        select * from MAT_PURCHASING_STATUS
        where SERIAL_NUMBER &gt; #{p1} and SERIAL_NUMBER &lt; = (#{p1} + #{p2})
        order by TID
    </select>
  <select id="getMPSBySNId" parameterType="int" resultType="MatPurchasingStatus" resultMap="BaseResultMap">
        select * from MAT_PURCHASING_STATUS where SERIAL_NUMBER = #{sn}
    </select>
  <insert id="insert" parameterType="com.xtk.apistation.webapi.bean.MatPurchasingStatus">
    insert into WEBAPI.MAT_PURCHASING_STATUS (TID, SERIAL_NUMBER, REQUEST_ID,
      REQUEST_NUM, NODE_STATS, NODE_TIME, FEEDBACK_INFO
      )
    values (MAT_PURCHASING_STATUS_ID.nextval, (select Max(SERIAL_NUMBER)+1 from MAT_PURCHASING_STATUS), #{requestId,jdbcType=VARCHAR},
      #{requestNum,jdbcType=VARCHAR}, #{nodeStats,jdbcType=VARCHAR}, #{nodeTime,jdbcType=VARCHAR}, #{feedbackInfo,jdbcType=VARCHAR}
      )
  </insert>
<!--  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TID, SERIAL_NUMBER, REQUEST_ID, REQUEST_NUM, NODE_STATS, NODE_TIME
  </sql>
  <select id="selectByExample" parameterType="generator.MatPurchasingStatusExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WEBAPI.MAT_PURCHASING_STATUS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="generator.MatPurchasingStatusExample">
    delete from WEBAPI.MAT_PURCHASING_STATUS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="generator.MatPurchasingStatus">
    insert into WEBAPI.MAT_PURCHASING_STATUS (TID, SERIAL_NUMBER, REQUEST_ID,
      REQUEST_NUM, NODE_STATS, NODE_TIME
      )
    values (#{tid,jdbcType=DECIMAL}, #{serialNumber,jdbcType=DECIMAL}, #{requestId,jdbcType=VARCHAR},
      #{requestNum,jdbcType=VARCHAR}, #{nodeStats,jdbcType=VARCHAR}, #{nodeTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="generator.MatPurchasingStatus">
    insert into WEBAPI.MAT_PURCHASING_STATUS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        TID,
      </if>
      <if test="serialNumber != null">
        SERIAL_NUMBER,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="requestNum != null">
        REQUEST_NUM,
      </if>
      <if test="nodeStats != null">
        NODE_STATS,
      </if>
      <if test="nodeTime != null">
        NODE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="requestNum != null">
        #{requestNum,jdbcType=VARCHAR},
      </if>
      <if test="nodeStats != null">
        #{nodeStats,jdbcType=VARCHAR},
      </if>
      <if test="nodeTime != null">
        #{nodeTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.MatPurchasingStatusExample" resultType="java.lang.Long">
    select count(*) from WEBAPI.MAT_PURCHASING_STATUS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update WEBAPI.MAT_PURCHASING_STATUS
    <set>
      <if test="record.tid != null">
        TID = #{record.tid,jdbcType=DECIMAL},
      </if>
      <if test="record.serialNumber != null">
        SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.requestNum != null">
        REQUEST_NUM = #{record.requestNum,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeStats != null">
        NODE_STATS = #{record.nodeStats,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeTime != null">
        NODE_TIME = #{record.nodeTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update WEBAPI.MAT_PURCHASING_STATUS
    set TID = #{record.tid,jdbcType=DECIMAL},
      SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      REQUEST_NUM = #{record.requestNum,jdbcType=VARCHAR},
      NODE_STATS = #{record.nodeStats,jdbcType=VARCHAR},
      NODE_TIME = #{record.nodeTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>-->
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generator.MatBasicInformationDao">
  <resultMap id="BaseResultMap" type="generator.MatBasicInformation">
    <id column="TID" jdbcType="DECIMAL" property="tid" />
    <result column="SERIAL_NUMBER" jdbcType="DECIMAL" property="serialNumber" />
    <result column="MID" jdbcType="VARCHAR" property="mid" />
    <result column="ATTACHMENT_NAME" jdbcType="VARCHAR" property="attachmentName" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="KEY_MATERIAL" jdbcType="VARCHAR" property="keyMaterial" />
    <result column="REPLACE_MATERIAL_NUM" jdbcType="VARCHAR" property="replaceMaterialNum" />
    <result column="ENTERPRISE_NAME" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="PURCHASE_CYCLE" jdbcType="DECIMAL" property="purchaseCycle" />
    <result column="UNIT_PRICE" jdbcType="DECIMAL" property="unitPrice" />
    <result column="PURCHASE_ID" jdbcType="VARCHAR" property="purchaseId" />
    <result column="LOCAL" jdbcType="VARCHAR" property="local" />
    <result column="IS_REPARABLE" jdbcType="VARCHAR" property="isReparable" />
    <result column="UNIT" jdbcType="VARCHAR" property="unit" />
    <result column="IS_INCREASE" jdbcType="VARCHAR" property="isIncrease" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TID, SERIAL_NUMBER, MID, ATTACHMENT_NAME, `TYPE`, KEY_MATERIAL, REPLACE_MATERIAL_NUM, 
    ENTERPRISE_NAME, PURCHASE_CYCLE, UNIT_PRICE, PURCHASE_ID, `LOCAL`, IS_REPARABLE, 
    UNIT, IS_INCREASE
  </sql>
  <select id="selectByExample" parameterType="generator.MatBasicInformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from WEBAPI.MAT_BASIC_INFORMATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from WEBAPI.MAT_BASIC_INFORMATION
    where TID = #{tid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from WEBAPI.MAT_BASIC_INFORMATION
    where TID = #{tid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="generator.MatBasicInformationExample">
    delete from WEBAPI.MAT_BASIC_INFORMATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="generator.MatBasicInformation">
    insert into WEBAPI.MAT_BASIC_INFORMATION (TID, SERIAL_NUMBER, MID, 
      ATTACHMENT_NAME, `TYPE`, KEY_MATERIAL, 
      REPLACE_MATERIAL_NUM, ENTERPRISE_NAME, PURCHASE_CYCLE, 
      UNIT_PRICE, PURCHASE_ID, `LOCAL`, 
      IS_REPARABLE, UNIT, IS_INCREASE
      )
    values (#{tid,jdbcType=DECIMAL}, #{serialNumber,jdbcType=DECIMAL}, #{mid,jdbcType=VARCHAR}, 
      #{attachmentName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{keyMaterial,jdbcType=VARCHAR}, 
      #{replaceMaterialNum,jdbcType=VARCHAR}, #{enterpriseName,jdbcType=VARCHAR}, #{purchaseCycle,jdbcType=DECIMAL}, 
      #{unitPrice,jdbcType=DECIMAL}, #{purchaseId,jdbcType=VARCHAR}, #{local,jdbcType=VARCHAR}, 
      #{isReparable,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{isIncrease,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="generator.MatBasicInformation">
    insert into WEBAPI.MAT_BASIC_INFORMATION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        TID,
      </if>
      <if test="serialNumber != null">
        SERIAL_NUMBER,
      </if>
      <if test="mid != null">
        MID,
      </if>
      <if test="attachmentName != null">
        ATTACHMENT_NAME,
      </if>
      <if test="type != null">
        `TYPE`,
      </if>
      <if test="keyMaterial != null">
        KEY_MATERIAL,
      </if>
      <if test="replaceMaterialNum != null">
        REPLACE_MATERIAL_NUM,
      </if>
      <if test="enterpriseName != null">
        ENTERPRISE_NAME,
      </if>
      <if test="purchaseCycle != null">
        PURCHASE_CYCLE,
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE,
      </if>
      <if test="purchaseId != null">
        PURCHASE_ID,
      </if>
      <if test="local != null">
        `LOCAL`,
      </if>
      <if test="isReparable != null">
        IS_REPARABLE,
      </if>
      <if test="unit != null">
        UNIT,
      </if>
      <if test="isIncrease != null">
        IS_INCREASE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tid != null">
        #{tid,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null">
        #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="keyMaterial != null">
        #{keyMaterial,jdbcType=VARCHAR},
      </if>
      <if test="replaceMaterialNum != null">
        #{replaceMaterialNum,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseCycle != null">
        #{purchaseCycle,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseId != null">
        #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="local != null">
        #{local,jdbcType=VARCHAR},
      </if>
      <if test="isReparable != null">
        #{isReparable,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="isIncrease != null">
        #{isIncrease,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="generator.MatBasicInformationExample" resultType="java.lang.Long">
    select count(*) from WEBAPI.MAT_BASIC_INFORMATION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update WEBAPI.MAT_BASIC_INFORMATION
    <set>
      <if test="record.tid != null">
        TID = #{record.tid,jdbcType=DECIMAL},
      </if>
      <if test="record.serialNumber != null">
        SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.mid != null">
        MID = #{record.mid,jdbcType=VARCHAR},
      </if>
      <if test="record.attachmentName != null">
        ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `TYPE` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.keyMaterial != null">
        KEY_MATERIAL = #{record.keyMaterial,jdbcType=VARCHAR},
      </if>
      <if test="record.replaceMaterialNum != null">
        REPLACE_MATERIAL_NUM = #{record.replaceMaterialNum,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseName != null">
        ENTERPRISE_NAME = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseCycle != null">
        PURCHASE_CYCLE = #{record.purchaseCycle,jdbcType=DECIMAL},
      </if>
      <if test="record.unitPrice != null">
        UNIT_PRICE = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseId != null">
        PURCHASE_ID = #{record.purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="record.local != null">
        `LOCAL` = #{record.local,jdbcType=VARCHAR},
      </if>
      <if test="record.isReparable != null">
        IS_REPARABLE = #{record.isReparable,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        UNIT = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.isIncrease != null">
        IS_INCREASE = #{record.isIncrease,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update WEBAPI.MAT_BASIC_INFORMATION
    set TID = #{record.tid,jdbcType=DECIMAL},
      SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      MID = #{record.mid,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{record.attachmentName,jdbcType=VARCHAR},
      `TYPE` = #{record.type,jdbcType=VARCHAR},
      KEY_MATERIAL = #{record.keyMaterial,jdbcType=VARCHAR},
      REPLACE_MATERIAL_NUM = #{record.replaceMaterialNum,jdbcType=VARCHAR},
      ENTERPRISE_NAME = #{record.enterpriseName,jdbcType=VARCHAR},
      PURCHASE_CYCLE = #{record.purchaseCycle,jdbcType=DECIMAL},
      UNIT_PRICE = #{record.unitPrice,jdbcType=DECIMAL},
      PURCHASE_ID = #{record.purchaseId,jdbcType=VARCHAR},
      `LOCAL` = #{record.local,jdbcType=VARCHAR},
      IS_REPARABLE = #{record.isReparable,jdbcType=VARCHAR},
      UNIT = #{record.unit,jdbcType=VARCHAR},
      IS_INCREASE = #{record.isIncrease,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="generator.MatBasicInformation">
    update WEBAPI.MAT_BASIC_INFORMATION
    <set>
      <if test="serialNumber != null">
        SERIAL_NUMBER = #{serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="mid != null">
        MID = #{mid,jdbcType=VARCHAR},
      </if>
      <if test="attachmentName != null">
        ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `TYPE` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="keyMaterial != null">
        KEY_MATERIAL = #{keyMaterial,jdbcType=VARCHAR},
      </if>
      <if test="replaceMaterialNum != null">
        REPLACE_MATERIAL_NUM = #{replaceMaterialNum,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseName != null">
        ENTERPRISE_NAME = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="purchaseCycle != null">
        PURCHASE_CYCLE = #{purchaseCycle,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null">
        UNIT_PRICE = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseId != null">
        PURCHASE_ID = #{purchaseId,jdbcType=VARCHAR},
      </if>
      <if test="local != null">
        `LOCAL` = #{local,jdbcType=VARCHAR},
      </if>
      <if test="isReparable != null">
        IS_REPARABLE = #{isReparable,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="isIncrease != null">
        IS_INCREASE = #{isIncrease,jdbcType=VARCHAR},
      </if>
    </set>
    where TID = #{tid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="generator.MatBasicInformation">
    update WEBAPI.MAT_BASIC_INFORMATION
    set SERIAL_NUMBER = #{serialNumber,jdbcType=DECIMAL},
      MID = #{mid,jdbcType=VARCHAR},
      ATTACHMENT_NAME = #{attachmentName,jdbcType=VARCHAR},
      `TYPE` = #{type,jdbcType=VARCHAR},
      KEY_MATERIAL = #{keyMaterial,jdbcType=VARCHAR},
      REPLACE_MATERIAL_NUM = #{replaceMaterialNum,jdbcType=VARCHAR},
      ENTERPRISE_NAME = #{enterpriseName,jdbcType=VARCHAR},
      PURCHASE_CYCLE = #{purchaseCycle,jdbcType=DECIMAL},
      UNIT_PRICE = #{unitPrice,jdbcType=DECIMAL},
      PURCHASE_ID = #{purchaseId,jdbcType=VARCHAR},
      `LOCAL` = #{local,jdbcType=VARCHAR},
      IS_REPARABLE = #{isReparable,jdbcType=VARCHAR},
      UNIT = #{unit,jdbcType=VARCHAR},
      IS_INCREASE = #{isIncrease,jdbcType=VARCHAR}
    where TID = #{tid,jdbcType=DECIMAL}
  </update>
</mapper>